apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
                includeCompileClasspath = true
            }
        }
        sourceSets.main.jniLibs.srcDirs = ['libs']
        ndk {
            //设置支持的SO库架构
            abiFilters "armeabi-v7a", "armeabi"
        }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir {
            dirs 'libs'//加载libs
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }
    }
    def isBuildSo = false
    if (isBuildSo) { // 构建生成 so 文件
        sourceSets {
            main {
                jniLibs.srcDirs = []
            }
        }
        externalNativeBuild {
            ndkBuild {
                path 'src/main/jni/Android.mk'
            }
        }
    } else { // 生成 so 文件后，打包时直接使用生成的 so
        sourceSets {
            main {
                jni.srcDirs = []
                jniLibs.srcDirs = ['libs']
            }
        }
        delete(file('.externalNativeBuild'), file('src/main/libs'), file('src/main/obj'))
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api develop.support.appcompat
    api "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin_version"
    api develop.support.design
    api develop.multidex
    api develop.support.constraint_layout

    //圆角图片组件
    api develop.glide.glide
    annotationProcessor develop.glide.compiler
    //注解器
    api develop.butterknife.butterknife
    annotationProcessor develop.butterknife.butterknife_compiler
    //运行时权限
    api develop.permissions.easypermission
    //可修改选中项字体大小和指示器长度的TabLayout

    //xrecyclerview下拉刷新列表
    api develop.xrecyclerview

    //alibaba-fastjson库
    api develop.fastjson
    /*网络监测*/
    debugImplementation develop.readystatesoftware.readystatesoftware
    releaseImplementation develop.readystatesoftware.readystatesoftware_noop
    //google gson
    api develop.gson
    api develop.fastjson

    //base64-编解码
    api files('libs/sun.misc.BASE64Decoder.jar')

    //必须使用
    api develop.ok_http.okgo
    api develop.ok_http.okserver
    api develop.ok_http.okhttp3
    api develop.ok_http.logging_interceptor
    api develop.ok_http.urlconnection
    //导入RxJava 和 RxAndroid
    api develop.rxjava.rxjava2
    api develop.rxjava.rxandroid

    //导入retrofit
    api develop.retrofit2.retrofit
    api develop.retrofit2.gson
    api develop.retrofit2.adapter_rxjava2

    //添加HttpLoggingInterceptor进行调试
    api develop.ok_http.logging_interceptor
    api develop.multitype
    api(develop.rxbus) {
        exclude group: 'com.android.support'
    }
    //状态栏沉浸式
    api develop.barlibrary
    //权限申请
    api files('libs/open_sdk_r5509.jar')
    api files('libs/mta-sdk-1.6.2.jar')
    api files('libs/weibosdkcore_release.jar')

    api develop.gallery_final
    api develop.stetho
    api develop.support.support_v4
    api develop.google_zxing
    api develop.bingoogolapple.photopicker
    api develop.bingoogolapple.baseadapter
    api develop.bingoogolapple.flowlayout
    api develop.universal_image_loader
    api develop.bingoogolapple.qrcode_core
    api develop.androidx_appcompat
    //侧滑返回
    api develop.swipebacklayout
    api develop.opensdk
    debugImplementation develop.leakcanary.leakcanary_android
    releaseImplementation develop.leakcanary.leakcanary_android_no_op
    debugImplementation develop.leakcanary.leakcanary_support_fragment


    api develop.jpush.jiguang_jpush
    api develop.jpush.jiguang_jcore
}